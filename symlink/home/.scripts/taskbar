#!/bin/sh
mkdir -p "$HOME/.taskbar/"

function volumed() {
    FILE="$1"
    echo > "$FILE"
    while
        echo "vol:$(amixer sget Master | tr '\n' ' ' | cut -d "[" -f 2 | cut -d "%" -f 1)"
        inotifywait "$FILE"
    do :; done
}

function batteryd() {
    BAT=""
    while
        BAT2="$($(upower -i "/org/freedesktop/UPower/devices/battery_BAT0" \
            | grep "percentage:" | sed -E "s/[^0-9]//g"))"
        if [ "$BAT2" != "$BAT" ]; then
            BAT="$BAT2"
            echo "bat:$BAT"
        fi
        sleep 60
    do :; done
}

function timed() {
    while
        echo "dat:$(date '+%F %R')"
        sleep 5
    do :; done
}

function usage() {
    grep 'cpu[0-9]' /proc/stat | sed -E "s/[ ]+/ /g" | cut -d ' ' -f 2,4,5
}

function cpud() {
    LAST=$(mktemp /tmp/cpu-last.XXXXXX)
    CURR=$(mktemp /tmp/cpu-curr.XXXXXX)
    usage > "$LAST"
    while
        usage > "$CURR"
        echo "cpu:$(paste -d " " "$CURR" "$LAST" | awk '{printf "%d %d %d\n",($1-$4),($2-$5),($3-$6)}' |\
            awk '{usage=($1+$2)/($1+$2+$3); printf "%d ",usage*100}')"
        cat "$CURR" > "$LAST"
        sleep 2
    do :; done
}

function memd() {
    MEM_CURR=""
    MEM_MAX=""
    while
        MEM="$(cat /proc/meminfo | grep -E "Mem" | sed "s/[^0-9]//g" | tr '\n' ' ')"
        MEM_CURR2="$(echo "$MEM" | awk '{printf "%d",($1-$3)}')"
        MEM_MAX2="$(echo "$MEM" | awk '{printf "%d",$1}')"
        if [ "$MEM_CURR2" != "$MEM_CURR" ]; then
            MEM_CURR="$MEM_CURR2"
            echo "memc:$MEM_CURR"
        fi
        if [ "$MEM_MAX2" != "$MEM_MAX" ]; then
            MEM_MAX="$MEM_MAX2"
            echo "memm:$MEM_MAX"
        fi
        sleep 2
    do :; done
}

function netd() {
    NET_RECEIVED="0"
    NET_TRANSMITTED="0"
    while
        NET=$(cat /proc/net/dev | tail -n +3 | sed -E 's/[ ]+/ /g' | cut -d ':' -f2 | cut -d ' ' -f 2,10)
        NET_RECEIVED2=$(echo "$NET" | cut -d ' ' -f1 | awk '{sum+=$1} END {print sum}')
        NET_TRANSMITTED2=$(echo "$NET" | cut -d ' ' -f2 | awk '{sum+=$1} END {print sum}')
        echo "net:$(expr $NET_RECEIVED2 - $NET_RECEIVED) $(expr $NET_TRANSMITTED2 - $NET_TRANSMITTED)"
        NET_RECEIVED="$NET_RECEIVED2"
        NET_TRANSMITTED="$NET_TRANSMITTED2"
        sleep 1
    do :; done
}

function colorizeCPUBars() {
    while read; do
        case "$REPLY" in
            ▁) echo "%{F#4CAF50}$REPLY%{F-}" ;;
            ▂) echo "%{F#8BC34A}$REPLY%{F-}" ;;
            ▃) echo "%{F#CDDC39}$REPLY%{F-}" ;;
            ▄) echo "%{F#FFEB3B}$REPLY%{F-}" ;;
            ▅) echo "%{F#FFC107}$REPLY%{F-}" ;;
            ▆) echo "%{F#FF9800}$REPLY%{F-}" ;;
            ▇) echo "%{F#FF5722}$REPLY%{F-}" ;;
            █) echo "%{F#F44336}$REPLY%{F-}" ;;
            *) echo "%{F#F44336}$REPLY%{F-}" ;;
        esac
    done
}

function colorizeBattery() {
    while read; do
        case "$REPLY" in
            ) echo "%{F#4CAF50}$REPLY%{F-}" ;;
            ) echo "%{F#8BC34A}$REPLY%{F-}" ;;
            ) echo "%{F#FFEB3B}$REPLY%{F-}" ;;
            ) echo "%{F#FF9800}$REPLY%{F-}" ;;
            ) echo "%{F#F44336}$REPLY%{F-}" ;;
            *) echo "%{F#F44336}$REPLY%{F-}" ;;
        esac
    done
}

function colorizeMemBar() {
    while read; do
        case "$REPLY" in
            █████*) echo "%{F#F44336}$REPLY%{F-}" ;;
            ████*) echo "%{F#FF5722}$REPLY%{F-}" ;;
            ███*) echo "%{F#FFC107}$REPLY%{F-}" ;;
            ██*) echo "%{F#CDDC39}$REPLY%{F-}" ;;
            █*) echo "%{F#8BC34A}$REPLY%{F-}" ;;
            *) echo "%{F#4CAF50}$REPLY%{F-}" ;;
        esac
    done
}

function prettyBytes() {
    while read B; do
    [ $B -lt 1024 ] && echo "${B}B" && break
    KB=$(((B+512)/1024))

    [ $KB -lt 1024 ] && echo "${KB}KiB" && break
    MB=$(((KB+512)/1024))

    [ $MB -lt 1024 ] && echo "${MB}MiB" && break
    GB=$(((MB+512)/1024))

    [ $GB -lt 1024 ] && echo "${GB}GiB" && break
    echo "$(((GB+512)/1024))TiB"
    done
}

(
    volumed "$HOME/.taskbar/volume-changed" &
    batteryd &
    timed &
    cpud &
    memd &
    netd &
) | while IFS=':' read -r FIELD LINE; do
    case $FIELD in
        vol) VOLUME="$LINE" ;;
        bat) BATTERY="$LINE" ;;
        dat) DATE="$LINE" ;;
        cpu) CPU="$LINE" ;;
        memc) MEM_CURR="$LINE" ;;
        memm) MEM_MAX="$LINE" ;;
        net)
            NETR="$(echo "$LINE" | cut -d ' ' -f1)"
            NETT="$(echo "$LINE" | cut -d ' ' -f2)"
            ;;
        *) continue ;;
    esac
    BAR=''
    BAR+='%{l}'
    BAR+=" $(printf '%6.6s' "$(echo "$NETR" | prettyBytes)")/s "
    BAR+=' '
    BAR+="$(printf '%6.6s' "$(echo "$NETT" | prettyBytes)")/s "
    BAR+='%{c}'
    # TODO Redo volume
    #BAR+="vol [$(echo "$VOLUME" | sab -s ' -=' -l 5 )]"
    BAR+="▕$(echo "$MEM_CURR" | sab -s ' ▏▎▍▌▋▊▉█' -l 5 -M "$MEM_MAX"| colorizeMemBar)▏"
    BAR+=' '
    if [ -z BATTERY ]; then
        BAR+="$BATTERY% $(echo "$BATTERY" | sab -s '' -l 1 -M 4 | colorizeBattery)"
        BAR+=' '
    fi
    BAR+="▕$(echo "$CPU" | tr ' ' '\n' | awk 'NF' | sab -s ' ▁▂▃▄▅▆▇█' -l 1 | colorizeCPUBars | tr -d '\n')▏"


    BAR+='%{r}'
    BAR+="$DATE  "
    echo "$BAR"
done  | lemonbar -p  -f 'DejaVu Sans Mono:style=Book:size=15'\
     -f 'Font Awesome 5 Brands:style=Regular:size=17'\
     -f 'Font Awesome 5 Free:style=Regular:size=17'\
     -f 'Font Awesome 5 Free:style=Solid:size=17'\
     -g 'x24'
