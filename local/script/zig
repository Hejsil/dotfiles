#!/bin/sh -e

cache_home=${XDG_CACHE_HOME:-~/.cache}
data_home=${XDG_DATA_HOME-~/.local/share}
download_dir="$data_home/zig-versions"
cache_dir="$cache_home/zig-versions"
git_dir="$cache_home/www_ziglang_org"

versions() {
    if ! [ -d "$git_dir/.git" ]; then
        git clone "https://github.com/ziglang/www.ziglang.org.git" "$git_dir" >/dev/null
    fi

    cd "$git_dir"

    date=$(date +%Y-%m-%d)

    if ! [ -f latest_pull ] || [ "$(cat latest_pull)" != "$date" ]; then
        git pull >/dev/null
        echo "$date" >latest_pull
    fi

    case $1 in
        master) jq -r '.master.version' data/releases.json ;;
        *) git log -p data/releases.json |
            grep '"version":' |
            cut '-d"' -f 4 |
            sort -uV ;;
    esac
}

zig() {
    mkdir -p "$download_dir" "$cache_dir"

    os=$(uname -s | tr '[:upper:]' '[:lower:]')
    arch=$(uname -m)

    master=$(versions master)
    version=${ZIG_VERSION:-$master}

    full_name="zig-$os-$arch-$version"
    tar_file="$full_name.tar.xz"
    dir_path="$cache_dir/$full_name"
    tar_path="$download_dir/$tar_file"

    if ! [ -f "$tar_path" ]; then
        curl "https://ziglang.org/builds/$tar_file" -o "$tar_path"
    fi

    if ! [ -d "$dir_path" ]; then
        tar xf "$tar_path" --directory="$cache_dir"

        tmp_zig_file=$(mktemp -t zig.XXXXXXXXXX.zig)
        "$dir_path/zig" fmt "$tmp_zig_file"
        rm "$tmp_zig_file"
    fi

    "$dir_path/zig" "$@"
}

first=$1
shift
case $first in
    versions) versions "$@" ;;
    *) zig "$first" "$@" ;;
esac
