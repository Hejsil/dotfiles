#!/bin/sh

fzf2() {
    fzf --layout reverse-list --cycle --margin 0,1 --color 16,border:bright-black \
        --border rounded --prompt '' -d'\t' "$@"
}

item() {
    str=$1
    shift
    cmd="$*"
    printf '%s\t%s\n' "$str" "$cmd"
}

option_menu() {
    while true; do
        items=$(for option in "$@"; do
            item $option
        done)
        chosen=$(echo "$items" | fzf2 --with-nth=1 | cut -f2-)
        if [ -z "$chosen" ]; then return; fi
        $chosen
    done
}

run_file_menu() {
    files_cmd=$1
    cmd=$2
    while true; do
        chosen=$($files_cmd | fzf2)
        if [ -z "$chosen" ]; then return; fi

        echo "$cmd '$chosen'" >&2
        $cmd "$chosen"
    done
}

main() {
    option_menu \
        "anime menu anime" \
        "music menu music"
}

anime() {
    cd "$HOME/torrents"
    cd "/media/stue/torrents"
    run_file_menu \
        'fd . --maxdepth 1 --strip-cwd-prefix' \
        'mpv --fs'
}

music() {
    playlist='https://youtube.com/playlist?list=PLQHmQm6ZbDZbb8szk0cg13FQBc2fNwPvS'
    cd "$(xdg-user-dir MUSIC)"
    yt-dlp --extract-audio --audio-format mp3 -f bestaudio/best --embed-metadata \
        -o '%(title)s.%(ext)s' --restrict-filename --download-archive archive.txt "$playlist"
    mpv --loop-playlist --quiet --force-window=no --shuffle --volume=30 .
}

case $1 in
    anime) anime ;;
    music) music ;;
    *) main ;;
esac
