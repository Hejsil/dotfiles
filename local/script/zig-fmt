#!/bin/sh -e

file=$(mktemp)
errors=$(mktemp)

cat - >"$file"

zig fmt "$file" 2>"$errors" >/dev/null || true
if [ -s "$errors" ]; then
    tab=$(printf '\t')
    {
        # Look for "expected 'x', found 'y'" errors and place the expected tokens into the file
        rg -o "[^:]*:([^:]*):([^:]*): error: expected '([^']*)', found " \
            -r "\$1$tab\$2$tab\$3" <"$errors" |
            nawk '{printf "%ds#.\{%d\}#&%s#\n", $1, $2 - 1, $3 }'

    } | sed 's#^#-e\n#' | xargs -d'\n' sed -E -i "$file"

    zig fmt "$file" >/dev/null 2>/dev/null || true
fi

case $(git remote get-url origin) in
    git@github.com:Hejsil/*)
        {
            # Sort global constants only for repos I own
            grep -E -n '^((pub\s+)?(const|usingnamespace)).*;$' "$file" | cut -d: -f1 |
                ranges | sed 's/$/!sort/'
            echo 'x'
        } | ex -s "$file"
        ;;
    *) ;;
esac

cat "$file"
rm "$file"
rm "$errors"
