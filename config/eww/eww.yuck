(defwidget bar [screen]
  (centerbox :orientation "h"
    (left_widgets :screen screen)
    (center_widgets)
    (right_widgets)))

(defwidget left_widgets [screen]
  (box :class "left_widgets"
       :orientation "h"
       :halign "start"
    (label :markup " ${workspaces[screen]}")))

(defwidget center_widgets []
  (box :class "center_widgets"
       :orientation "h"
       :halign "start"
    "ram ${round(EWW_RAM.used_mem_perc, 0)}% cpu ${round(EWW_CPU.avg, 0)}%"))

(defwidget right_widgets []
  (box :class "right_widgets"
       :orientation "h"
       :space-evenly false
       :halign "end"
    "${rss}  ${time}  "))

(defpoll rss :interval "10s"
  "bar-rss")

(defpoll time :interval "10s"
  "date '+Week %V %b %d %a %H:%M'")

(deflisten workspaces :initial "{}"
  "bar-workspaces WMDisplayPort-0")

(defpoll ram :interval "1s"
  "bar-ram")

(defwindow bar [screen]
  :monitor screen
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "26px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "26px")
  (bar :screen screen))
